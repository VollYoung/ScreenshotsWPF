<Window x:Class="Screenshots.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d"
       AllowsTransparency="True"
        WindowStyle="None" Topmost="True" ShowActivated="True"
        WindowState="Maximized" ShowInTaskbar="False" UseLayoutRounding="True" SnapsToDevicePixels="True"
        MouseLeftButtonDown="MainWindow_OnMouseDown" PreviewKeyDown="MainWindow_OnPreviewKeyDown"
        MouseMove="MainWindow_OnMouseMove" MouseRightButtonUp="MainWindow_OnMouseRightButtonUp" MouseLeftButtonUp="MainWindow_OnMouseLeftButtonUp">
  <!--AllowsTransparency="True"
        WindowStyle="None" topmost
        WindowState="Maximized"-->

  <FrameworkElement.Resources>
    <ResourceDictionary>
      <Style x:Key="img" TargetType="Image">
        <Setter Property="Width" Value="18"/>
        <Setter Property="Height" Value="18"/>
        <Setter Property="Margin" Value="16,9,8,9"/>
      </Style>

      <Style x:Key="border" TargetType="Border">
        <Setter Property="Margin" Value="8,9"/>
        <Setter Property="Width" Value="1"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="#CCCCCC"/>
      </Style>

      <Style x:Key="CheckBoxStyle" TargetType="{x:Type CheckBox}">
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type CheckBox}">
              <Border>
                <ContentPresenter/>
              </Border>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
        <Style.Triggers>
          <Trigger Property="IsMouseOver" Value="True">
            <Setter Property="Opacity" Value="0.6"></Setter>
          </Trigger>
        </Style.Triggers>
      </Style>

      <Style x:Key="listview" TargetType="ListView">
        <Setter Property="ItemContainerStyle" >
          <Setter.Value>
            <Style TargetType="ListViewItem">
              <Setter Property="Template">
                <Setter.Value>
                  <ControlTemplate TargetType="ListViewItem">
                    <Border>
                      <ContentPresenter VerticalAlignment="Center"/>
                    </Border>
                  </ControlTemplate>
                </Setter.Value>
              </Setter>
            </Style>
          </Setter.Value>
        </Setter>
        <Setter Property="ItemsPanel">
          <Setter.Value>
            <ItemsPanelTemplate>
              <StackPanel Orientation="Horizontal"/>
            </ItemsPanelTemplate>
          </Setter.Value>
        </Setter>
      </Style>

      <Style x:Key="{x:Type TextBox}" TargetType="{x:Type TextBox}">
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type TextBox}">
              <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True" CornerRadius="2" >
                <Border.OpacityMask>
                  <VisualBrush>
                    <VisualBrush.Visual>
                      <Border 
                        Background="Black"
                        SnapsToDevicePixels="True"
                        CornerRadius="2"
                        Width="{TemplateBinding ActualWidth}"
                        Height="{TemplateBinding ActualHeight}"
                      />
                    </VisualBrush.Visual>
                  </VisualBrush>
                </Border.OpacityMask>

                <Grid>
                  <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden"  VerticalScrollBarVisibility="Hidden" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Background="{Binding Background,RelativeSource={RelativeSource AncestorType=TextBox},Mode=TwoWay}"/>
                </Grid>
              </Border>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>
    </ResourceDictionary>
  </FrameworkElement.Resources>

  <Grid Background="Black">

    <Image x:Name="ImageMask" Opacity="0.2"/>

    <Image x:Name="Image" />

    <Canvas x:Name="Canvas" >
      <Canvas x:Name="AdornerRectangle" Focusable="True" ClipToBounds="True" Background="#01FFFFFF" PreviewMouseMove="AdornerRectangle_OnPreviewMouseMove" MouseLeftButtonDown="AdornerRectangle_OnMouseLeftButtonDown"  PreviewMouseLeftButtonDown="AdornerRectangle_OnPreviewMouseLeftButtonDown" PreviewMouseLeftButtonUp="AdornerRectangle_OnPreviewMouseLeftButtonUp"/>
      <Border x:Name="Controller" Background="White" CornerRadius="2" Height="36" Width="380" HorizontalAlignment="Right" VerticalAlignment="Bottom" Visibility="Collapsed">
        <Border.Effect>
          <DropShadowEffect Direction="270" Color="#32323A" BlurRadius="4" ShadowDepth="2" Opacity="0.08"/>
        </Border.Effect>

        <StackPanel Orientation="Horizontal">
          <CheckBox x:Name="rectbtn" Click="Rectbtn_OnClick">
            <CheckBox.Style>
              <Style TargetType="CheckBox" BasedOn="{StaticResource CheckBoxStyle}">
                <Setter Property="Content">
                  <Setter.Value>
                    <Image Source="Images/rect.png" Style="{StaticResource img}"/>
                  </Setter.Value>
                </Setter>
                <Style.Triggers>
                  <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Content">
                      <Setter.Value>
                        <Image Source="Images/rect_push.png" Style="{StaticResource img}"/>
                      </Setter.Value>
                    </Setter>
                  </Trigger>
                </Style.Triggers>
              </Style>
            </CheckBox.Style>
          </CheckBox>

          <CheckBox x:Name="criclebtn" Click="Rectbtn_OnClick">
            <CheckBox.Style>
              <Style TargetType="CheckBox" BasedOn="{StaticResource CheckBoxStyle}">
                <Setter Property="Content">
                  <Setter.Value>
                    <Image Source="Images/cricle.png" Style="{StaticResource img}"/>
                  </Setter.Value>
                </Setter>
                <Style.Triggers>
                  <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Content">
                      <Setter.Value>
                        <Image Source="Images/cricle_push.png" Style="{StaticResource img}"/>
                      </Setter.Value>
                    </Setter>
                  </Trigger>
                </Style.Triggers>
              </Style>
            </CheckBox.Style>
          </CheckBox>

          <CheckBox x:Name="penbtn" Click="Rectbtn_OnClick">
            <CheckBox.Style>
              <Style TargetType="CheckBox" BasedOn="{StaticResource CheckBoxStyle}">
                <Setter Property="Content">
                  <Setter.Value>
                    <Image Source="Images/pen.png" Style="{StaticResource img}"/>
                  </Setter.Value>
                </Setter>
                <Style.Triggers>
                  <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Content">
                      <Setter.Value>
                        <Image Source="Images/pen_push.png" Style="{StaticResource img}"/>
                      </Setter.Value>
                    </Setter>
                  </Trigger>
                </Style.Triggers>
              </Style>
            </CheckBox.Style>
          </CheckBox>
          <CheckBox x:Name="mosaicbtn" Click="Rectbtn_OnClick" Visibility="Collapsed">
            <CheckBox.Style>
              <Style TargetType="CheckBox" BasedOn="{StaticResource CheckBoxStyle}">
                <Setter Property="Content">
                  <Setter.Value>
                    <Image Source="Images/mosaic.png" Style="{StaticResource img}"/>
                  </Setter.Value>
                </Setter>
                <Style.Triggers>
                  <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Content">
                      <Setter.Value>
                        <Image Source="Images/mosaic_push.png" Style="{StaticResource img}"/>
                      </Setter.Value>
                    </Setter>
                  </Trigger>
                </Style.Triggers>
              </Style>
            </CheckBox.Style>
          </CheckBox>
          <CheckBox x:Name="textbtn" Click="Rectbtn_OnClick">
            <CheckBox.Style>
              <Style TargetType="CheckBox" BasedOn="{StaticResource CheckBoxStyle}">
                <Setter Property="Content">
                  <Setter.Value>
                    <Image Source="Images/text.png" Style="{StaticResource img}"/>
                  </Setter.Value>
                </Setter>
                <Style.Triggers>
                  <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Content">
                      <Setter.Value>
                        <Image Source="Images/text_push.png" Style="{StaticResource img}"/>
                      </Setter.Value>
                    </Setter>
                  </Trigger>
                </Style.Triggers>
              </Style>
            </CheckBox.Style>
          </CheckBox>

          <Border Style="{StaticResource border}"/>

          <CheckBox x:Name="undobtn"  Click="Undobtn_OnClick" IsEnabled="False">
            <CheckBox.Style>
              <Style TargetType="CheckBox" BasedOn="{StaticResource CheckBoxStyle}">
                <Setter Property="Content">
                  <Setter.Value>
                    <Image Source="Images/undo.png" Style="{StaticResource img}"/>
                  </Setter.Value>
                </Setter>
                <Style.Triggers>
                  <Trigger Property="IsMouseCaptured" Value="True">
                    <Setter Property="Opacity" Value="1"/>
                    <Setter Property="Content">
                      <Setter.Value>
                        <Image Source="Images/undo_push.png" Style="{StaticResource img}"/>
                      </Setter.Value>
                    </Setter>
                  </Trigger>
                  <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" Value="1"/>
                    <Setter Property="Content">
                      <Setter.Value>
                        <Image Source="Images/undo_disable.png" Style="{StaticResource img}"/>
                      </Setter.Value>
                    </Setter>
                  </Trigger>
                </Style.Triggers>
              </Style>
            </CheckBox.Style>
          </CheckBox>
          <CheckBox x:Name="downloadbtn" Click="Downloadbtn_OnClick">
            <CheckBox.Style>
              <Style TargetType="CheckBox" BasedOn="{StaticResource CheckBoxStyle}">
                <Setter Property="Content">
                  <Setter.Value>
                    <Image Source="Images/download.png" Style="{StaticResource img}"/>
                  </Setter.Value>
                </Setter>
                <Style.Triggers>
                  <Trigger Property="IsMouseCaptured" Value="True">
                    <Setter Property="Opacity" Value="1"/>
                    <Setter Property="Content">
                      <Setter.Value>
                        <Image Source="Images/download_push.png" Style="{StaticResource img}"/>
                      </Setter.Value>
                    </Setter>
                  </Trigger>
                </Style.Triggers>
              </Style>
            </CheckBox.Style>
          </CheckBox>

          <Border Style="{StaticResource border}"/>

          <CheckBox x:Name="closebtn" Style="{StaticResource CheckBoxStyle}" Click="Closebtn_OnClick">
            <Image Source="Images/close.png" Style="{StaticResource img}"/>
          </CheckBox>
          <CheckBox x:Name="okbtn" Style="{StaticResource CheckBoxStyle}" Click="Okbtn_OnClick">
            <Image Source="Images/ok.png" Style="{StaticResource img}"/>
          </CheckBox>
        </StackPanel>
      </Border>

      <Grid x:Name="ControlGrid" Width="260" Height="36" Visibility="Collapsed">
        <Border Background="White" CornerRadius="2" Margin="3">

          <StackPanel Orientation="Horizontal">

            <ListView ScrollViewer.HorizontalScrollBarVisibility="Disabled" ItemsSource="{Binding SizeList}" Background="Transparent" BorderThickness="0" Margin="8,0,0,0" SelectedValue="{Binding SizeSelected}" SelectionMode="Single" Style="{StaticResource listview}">
              <ItemsControl.ItemTemplate>
                <DataTemplate DataType="ListViewItem">
                  <Grid  Margin="0,0,12,0">
                    <Ellipse Name="Ellipse" Width="{Binding}" Height="{Binding}" >
                      <Ellipse.Style>
                        <Style TargetType="Ellipse">
                          <Setter Property="Fill" Value="DarkGray"/>
                          <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                              <Setter Property="Fill" Value="#0486FE"/>
                            </Trigger>
                          </Style.Triggers>
                        </Style>
                      </Ellipse.Style>
                    </Ellipse>
                  </Grid>
                  <DataTemplate.Triggers>
                    <DataTrigger Binding="{Binding IsSelected,RelativeSource={RelativeSource TemplatedParent}}" Value="True">
                      <Setter TargetName="Ellipse" Property="Fill" Value="#0486FE"/>
                    </DataTrigger>
                  </DataTemplate.Triggers>
                </DataTemplate>
              </ItemsControl.ItemTemplate>
            </ListView>

            <ListView ScrollViewer.HorizontalScrollBarVisibility="Disabled" ItemsSource="{Binding ColorList}" Background="Transparent" BorderThickness="0" Margin="8,0,0,0" SelectedValue="{Binding ColorSelected}" SelectionMode="Single" Style="{StaticResource listview}">
              <ItemsControl.ItemTemplate>
                <DataTemplate DataType="ListViewItem">
                  <Grid  Margin="0,0,12,0">
                    <Rectangle Name="Rectangle" Width="15" Height="15" StrokeThickness="3" >
                      <Rectangle.Style>
                        <Style TargetType="Rectangle">
                          <Setter Property="Fill" >
                            <Setter.Value>
                              <SolidColorBrush Color="{Binding}"/>
                            </Setter.Value>
                          </Setter>
                          <Setter Property="Stroke" >
                            <Setter.Value>
                              <SolidColorBrush Color="{Binding}"/>
                            </Setter.Value>
                          </Setter>
                          <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                              <Setter Property="Fill" Value="White"></Setter>
                            </Trigger>
                          </Style.Triggers>
                        </Style>
                      </Rectangle.Style>
                    </Rectangle>
                  </Grid>
                  <DataTemplate.Triggers>
                    <DataTrigger Binding="{Binding IsSelected,RelativeSource={RelativeSource TemplatedParent}}" Value="True">
                      <Setter TargetName="Rectangle" Property="Fill" Value="White"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding}" Value="{x:Static Colors.WhiteSmoke}">
                      <Setter TargetName="Rectangle" Property="Stroke" Value="Gray"/>
                      <Setter TargetName="Rectangle" Property="StrokeThickness" Value="1"/>
                    </DataTrigger>
                  </DataTemplate.Triggers>
                </DataTemplate>
              </ItemsControl.ItemTemplate>
            </ListView>
          </StackPanel>

        </Border>

        <Path Fill="White" Data="{Binding Data}" />
      </Grid>

    </Canvas>

  </Grid>
</Window>
